//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    // Function to detect cycle in a directed graph.
    
    
    bool DFSCycle(int i, vector<int> &visited, vector<int> &dfsVisited, vector<int> adj[]){
        
        visited[i] = 1;
        dfsVisited[i] = 1;
        for(auto it: adj[i]){
            if(visited[it] == 0){
                if(DFSCycle(it,  visited, dfsVisited, adj))
                    return true;
            }
            else if(dfsVisited[it] == 1 && visited[it] == 1){
                    return true;
            }
        }
        dfsVisited[i] = 0;
        return false;
    }
    
    
    bool isCyclic(int V, vector<int> adj[]) {
        vector<int> visited(V, 0);
        vector<int> dfsVisited(V, 0);
        
        for(int i=0;i<V;i++){
            if(visited[i] == 0){
                if(DFSCycle(i, visited, dfsVisited, adj))
                    return true;
            }
        }
        return false;
    }
};
