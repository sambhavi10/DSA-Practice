class Solution{
    
	public:
	void dfs(int i,  vector<int> adj[], stack<int> &s, vector<int> &visited){
	    
	    
	    visited[i] = 1;
	    for(auto it: adj[i]){
	        if(visited[it] == 0){
	            dfs(it, adj, s, visited);
	        }
	    }
	    s.push(i);
	}
	
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) {
	    
        stack<int> s;
	    vector<int> visited(V, 0);
	    for(int i=0;i<V;i++){
	        if(visited[i] == 0)
	            dfs(i, adj, s, visited);
	    }
	    
	    vector<int> ans;
	    
	    while(!s.empty()){
	        ans.push_back(s.top());
	        s.pop();
	    }
	    
	   return ans;
	}
};
