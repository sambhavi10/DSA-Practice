class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph. 
    void dfs(int i, vector<int> adj[], vector<int> &visited, vector<int> &ans){
        
        visited[i] = 1;
        ans.push_back(i);
        for(auto it: adj[i]){
            if(visited[it] == 0){
                dfs(it, adj, visited, ans);
            }

        }
    }
    
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        vector<int> ans;
        vector<int> visited(V+1, 0);
        for(int i=0;i<V;i++){
            if(visited[i] == 0)
                dfs(i, adj, visited, ans);
        
        }
       return ans; 
    }
};
