
class Solution {
  public:
  
  void dfs(int node, vector<int> adj[], vector<int> &ans, vector<int> &visited){
      ans.push_back(node);
      visited[node] = 1;
      for(auto it: adj[node]){
          if(!visited[it])
            dfs(it, adj, ans, visited);
      }
  }
  
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
       vector<int> ans;
       vector<int> visited(V+1, 0);
       
      for(int i=1; i<=V;i++){
           //int i=0;
           if(!visited[i]){
               dfs(i, adj, ans, visited);
           }
       }
       return ans;
    }
};
