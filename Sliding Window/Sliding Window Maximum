//had a very hard time
//Leetcode hard
//learnt about deques, and their usefulness
//REVISE 
//do dry run, to understand how queues dont work, and deque does
//test case -> [1,3,1,2,0,5]
//In Notebook -> with stack questions

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int>q;
        vector<int> ans;
        int n = nums.size();
        
        int i=0, j=0;
        while(j < n){
            
            while(!q.empty() && q.back() < nums[j])
                q.pop_back();
            q.push_back(nums[j]);
            
            if(j-i+1 < k){
                j++;
            }
            else if(j-i+1 == k){
        
                ans.push_back(q.front());
                if(nums[i] == q.front())
                    q.pop_front();
                i++;
                j++;
            }
        }
        return ans;
    }
};
