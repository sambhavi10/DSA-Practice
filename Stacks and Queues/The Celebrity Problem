class Solution {
    public:
    //Function to find if there is a celebrity in the party or not.
    
    //we're using the stack just to bring down the complexity from O(N^2) to O(N)
    int celebrity(vector<vector<int> >& M, int n) {
       
        stack<int> st;
        for(int i=0;i<n;i++)
            st.push(i);
            
        while(st.size() > 1){
            
            int a = st.top();
            st.pop();
            int b = st.top();
            st.pop();
            
            if(M[a][b] == 1)
                st.push(b);
            else
                st.push(a);
                
        }
        int celeb = st.top();
        
        //check if he is known by everyone
        for(int i = 0;i<n;i++){

            if(M[i][celeb] == 0 && i != celeb){
                return -1;
            }
        }
        
        //check if it knows nobody
        for(int i = 0;i<n;i++){
            if(M[celeb][i] == 1){
                return -1;
            }
        }
        
        return celeb;
    }
};
