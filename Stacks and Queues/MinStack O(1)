 //O(1)
    stack<long long> s;
    long long minEle;
    void push(int val) {
        if(s.empty()){
            s.push(val);
            minEle = val;
        }    
        else if(val < minEle){
            long long int p = 2*(long long)val-minEle;
            s.push(p);
            minEle = val;
         }
        else
            s.push(val);
        
    }
    
    void pop() {
        if(s.empty())
            return;
        else if(s.top() < minEle){
            minEle = 2*minEle - s.top();
            s.pop();
        }
        else
            s.pop();      
    }
    
    int top() {
         if(s.empty())
            return -1;
         else if(s.top() < minEle)
            return minEle;     
         else
            return s.top();

    }
    int getMin() {
        if(s.empty())
            return -1;
        else{
            return minEle;
        }
              
    }

};   
