//GFG - Minimum Sum Partition
class Solution{

  public:
	int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    int sum = 0;
	    for(int i = 0; i < n; i++){
	        sum += arr[i];
	    }
	    
	    //DP code starts here
	    int t[n+1][sum+1];
        for(int i=0;i<n+1;i++){
            for(int j=0;j<sum+1;j++){
                if(j == 0)
                    t[i][j] = 1;
                else
                    t[i][j] = 0;
            }
        }
         for(int i=1;i<n+1; i++){
            for(int j=1;j<sum+1;j++){
                if(arr[i-1] <= j){
                    t[i][j] = t[i-1][j-arr[i-1]] || t[i-1][j];
                }
                else
                    t[i][j] = t[i-1][j];
            }
         }
        
        //TRICK : THE ELEMENT OCCURING FIRST FROM THE BACK(IN THE FIRST HALF)
        //WILL GIVR THE MINIMUM DIFFERENCE :)
        for(int j=sum/2 ; j>=0 ; j--){
            if(t[n][j] == true){
                return sum-2*j;

            }
        }
	} 
};
