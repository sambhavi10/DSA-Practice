
//Leetcode Problem
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode* dummy = new ListNode();
        ListNode* temp = dummy;
        int carry = 0;
        
        //this condition carry!=0 has to be added when we have just the carry to be added as the last node for our 
        //resultant linked list, both l1 and l2 nodes have been used up, and we still have a carry left
        while(l1 != NULL || l2 != NULL || carry!=0){
            int sum = 0;
            if(l1 != NULL){
                sum += l1->val;
                l1 = l1->next;
            }
            if(l2 != NULL){
                sum += l2->val;
                l2 = l2->next;
           
            }
            sum = sum+carry;
            carry = sum / 10;
            sum = sum % 10;
            ListNode* newNode = new ListNode(sum);
            temp->next = newNode;
            temp = temp->next;
            
        }
        
        return dummy->next;
    }
};
