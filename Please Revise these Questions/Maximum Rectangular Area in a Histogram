
//VERY IMPORTANT PLEASE REVISE
//HAD A HARD TIME 


class Solution{
    
    public:
    //Function to find largest rectangular area possible in a given histogram.
    long long getMaxArea(long long arr[], int n){  
      
      vector<int> left(n);
        vector<int> right(n);
        stack<int> stack;
        
        for(int i=0; i<n; i++){
            while(!stack.empty() && arr[stack.top()] >= arr[i]){
                stack.pop();
            }
            if(stack.empty()){
                left[i] = 0;
            }
            else{
                left[i] = stack.top() + 1;
            }
            stack.push(i);
        }
        
        while(not stack.empty()){
            stack.pop();
        }
        
        for(int i=n-1; i>=0; i--){
            while(!stack.empty() && arr[stack.top()] >= arr[i]){
                stack.pop();
            }
            if(stack.empty()){
                right[i] = n;
            }
            else{
                right[i] = stack.top();
            }
            stack.push(i);
        }
        
        long long result = 0;
        
        for(int i=0; i<n; i++){
            result = max(result, (right[i]-left[i])*arr[i]);
        }
        
        return result;
    }
};
